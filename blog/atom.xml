<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lab240.github.io/blog</id>
    <title>Lab240 Blog</title>
    <updated>2023-08-21T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lab240.github.io/blog"/>
    <subtitle>Lab240 Blog</subtitle>
    <icon>https://lab240.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Работа с данными в Telegraf]]></title>
        <id>https://lab240.github.io/blog/telegraf-starlark</id>
        <link href="https://lab240.github.io/blog/telegraf-starlark"/>
        <updated>2023-08-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Предисловие. О Telegraf.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="предисловие-о-telegraf">Предисловие. О Telegraf.<a href="#предисловие-о-telegraf" class="hash-link" aria-label="Прямая ссылка на Предисловие. О Telegraf." title="Прямая ссылка на Предисловие. О Telegraf.">​</a></h2><p>Telegraf универсальный инструмент перекладывания данных от источников данных к приемникам данных. Классическим источником данных являются протоколы опроса датчиков, такие как modbus\mqtt, а классическим приемником данных являются базы данных (influxdb, mysql). Наличие сотен плагинов для Telegraf освобождает нас от написания микросервисов по перекладыванию данных, а применять один инструмент.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>подсказка</div><div class="admonitionContent_S0QG"><ul><li>Ссылка на Telegraf: <a href="https://www.influxdata.com/time-series-platform/telegraf/" target="_blank" rel="noopener noreferrer">https://www.influxdata.com/time-series-platform/telegraf/</a> </li><li>Ссылка на плагины Telegraf: <a href="https://docs.influxdata.com/telegraf/v1.26/plugins/" target="_blank" rel="noopener noreferrer">https://docs.influxdata.com/telegraf/v1.26/plugins/</a></li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="применение-telegraf">Применение Telegraf<a href="#применение-telegraf" class="hash-link" aria-label="Прямая ссылка на Применение Telegraf" title="Прямая ссылка на Применение Telegraf">​</a></h2><p>Мы используем "комбайн" Telegraf в наших решениях по сбору данных и любим его за универсальность. </p><p>Пример конфиг для сбора данных по modbus выглядит так</p><p>Modbus TCP</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[[inputs.modbus]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name = "Device"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  slave_id = 4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  timeout = "3s"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  controller = "tcp://127.0.0.1:502" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  holding_registers = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "elemy_binary1", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [0]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "elemy_binary2", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [1]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Modbus rtu </p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>MQTT Config</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[inputs.mqtt_consumer]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  servers = ["tcp://SERVER:1883"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  topics = ["/donoff/+/out/sensors/+"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  username = "MQTT_USER"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  password = "MQTT_PASS"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  data_format = "value"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  data_type = "string"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[inputs.mqtt_consumer.topic_parsing]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    topic = "/donoff/+/out/sensors/+"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tags = "/prj/dev/_/_/_"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fields = "/_/_/_/_/sensor_name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="преобразование-данных">Преобразование данных<a href="#преобразование-данных" class="hash-link" aria-label="Прямая ссылка на Преобразование данных" title="Прямая ссылка на Преобразование данных">​</a></h2><p>Прежде чем данные пойдут в приемник, они могут быть обработаны, так называемыми процессорами. Не всегда получаемые готовы в прямом виде поступить в туже базу данных. Надо отфильтровать ненужные (лишние), преобразовать типы, и даже получить новые данные на основе исходных. </p><p>Пример простого процессора для MQTT</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[[processors.pivot]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tag_key = "sensor_name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    value_key = "value"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Однако, существует гораздо более мощный инструмент для преобразования данных - полноценный язык Starlark, синтаксис которого очень близок к Python.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>подсказка</div><div class="admonitionContent_S0QG"><p>Описание языка Starlark: <a href="https://github.com/bazelbuild/starlark/blob/master/spec.md" target="_blank" rel="noopener noreferrer">https://github.com/bazelbuild/starlark/blob/master/spec.md</a></p></div></div><p>Пример раззбора топиков и значений из MQTT</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[processors.starlark]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> # Reads the Starlark script embedded</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  source = '''</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metric</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#Разбор поля с названием сенсора </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sm</span><span class="token operator" style="color:#393A34">=</span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'sensor_name'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#Можно "пропустить" данные которые не нужны</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> sm </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'pzem004'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> metric</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#Преобразование типа данных</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sv</span><span class="token operator" style="color:#393A34">=</span><span class="token builtin">float</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'value'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#Преобразуем вместо value=значение к имя_сенсора=значение</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'sensor_name'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">sv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#Добавляем новое поле type (тип датчика) на основе имени дачтика и делаем undef если не удалось распознать.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'temp'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> sm</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'type'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'temp'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'curr'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> sm</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">or</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'sct'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> sm</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'type'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'current'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'sec'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> sm</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'type'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'seconds'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'power'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> sm</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'type'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'power'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'energy'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> sm</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'type'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'energy'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'energy'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> sm</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'type'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'volt'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'type'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'undef'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">#Убираем лишние метрики    </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'value'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tags</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'topic'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'sensor_name'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> metric</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">'''</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Еще один пример применения starlark - разбор приходящих данных из modbus источника на биты (вот так придумал производитель)</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[inputs.modbus]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name = "Device"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  slave_id = 4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  timeout = "3s"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  controller = "tcp://127.0.0.1:502"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  holding_registers = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "elemy_binary1", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [0]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[processors.starlark]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> # Reads the Starlark script embedded</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  source = '''</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metric</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ei</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'elemy_binary1'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Готовим массив из 16 значений</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  bit_array</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token boolean" style="color:#36acaa">None</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token number" style="color:#36acaa">16</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Берем входящее значение и раскладываем каждый бит в элементы массива</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">16</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ei</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Формируем метрики на основе битов (некоторые метрики multi_bit) согласно документации на устройство</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'priority'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">2</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'switch_mode'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'is_input1_norm_state'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'is_input2_norm_state'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'is_input1_active'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'is_input2_active'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'load_state'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">13</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">2</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">12</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'is_out_voltage1'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">14</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  metric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fields</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'is_out_voltage2'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bit_array</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">15</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> metric</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">'''</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Надеемся из этих примеров становится понятно, насколько гибок и универсален инструмент Starlark. </p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>примечание</div><div class="admonitionContent_S0QG"><p>Фантастические возможности, учитывая что данные в Telegraf могут быть взяты из многих и разных по природе источников. А далее с помощью простых программ на Starlark - обработаны, подчищены, добавлены и выданы в приемник.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="приемник-данных">Приемник данных<a href="#приемник-данных" class="hash-link" aria-label="Прямая ссылка на Приемник данных" title="Прямая ссылка на Приемник данных">​</a></h2><p>В качестве примера приведем вывод данных в базу данных influx_v2. Как видно, конфиг абсолютно "тупой", потому что все данные мы уже подготовили !</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[outputs.influxdb_v2]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## The URLs of the InfluxDB cluster nodes.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ##</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Multiple URLs can be specified for a single cluster, only ONE of the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## urls will be written to each interval.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ##   ex: urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  urls = ["http://mon_influxdb2:8086"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Token for authentication.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  token = "TOKEN"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Organization is the name of the organization you wish to write to.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  organization = "nnzipc"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Destination bucket to write into.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  bucket = "bucket1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## The value of this tag will be used to determine the bucket.  If this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## tag is not set the 'bucket' option is used as the default.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # bucket_tag = ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## If true, the bucket tag will not be added to the metric.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # exclude_bucket_tag = false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Timeout for HTTP messages.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # timeout = "5s"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Additional HTTP headers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # http_headers = {"X-Special-Header" = "Special-Value"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## HTTP Proxy override, if unset values the standard proxy environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## variables are consulted to determine which proxy, if any, should be used.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # http_proxy = "http://corporate.proxy:3128"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## HTTP User-Agent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  user_agent = "telegraf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Content-Encoding for write request body, can be set to "gzip" to</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## compress body or "identity" to apply no encoding.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # content_encoding = "gzip"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Enable or disable uint support for writing uints influxdb 2.0.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # influx_uint_support = false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Optional TLS Config for use on HTTP connections.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # tls_ca = "/etc/telegraf/ca.pem"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # tls_cert = "/etc/telegraf/cert.pem"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # tls_key = "/etc/telegraf/key.pem"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## Use TLS but skip chain &amp; host verification</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # insecure_skip_verify = false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>💥 Удачи Вам (и нам) в передаче и преобразовании данных</p>]]></content>
        <author>
            <name>dmn</name>
            <uri>https://github.com/dmnovikov</uri>
        </author>
        <category label="team" term="team"/>
        <category label="lab240" term="lab240"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Собираем аналитику с ПДУ *)]]></title>
        <id>https://lab240.github.io/blog/dmn-prj-na-1</id>
        <link href="https://lab240.github.io/blog/dmn-prj-na-1"/>
        <updated>2023-08-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[*) Статья не совсем готова, ссылки могут и скорее всего не]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>примечание</div><div class="admonitionContent_S0QG"><p>*) Статья не совсем готова, ссылки могут и скорее всего не
работают. Как все будет готово, снимем эту плашку. </p></div></div><p>Про то, как мы быстро сделали систему визуализации работы ПДУ</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="предистория">Предистория<a href="#предистория" class="hash-link" aria-label="Прямая ссылка на Предистория" title="Прямая ссылка на Предистория">​</a></h2><p>Есть такой известный бренд в мире управления питанием для стоек в дата центрах - Raritan. Маститый вендор, предоставляющий софт с кучей аналитики по работе оборудования. А есть молодой производитель Elemy, у которого есть веб-интерфейс для просмотра текущих параметров, но нет аналитики. Для начала мы взяли устройство <a href="https://www.elemy.ru/products/ats-1204" target="_blank" rel="noopener noreferrer">"АВТОМАТИЧЕСКИЙ СТОЕЧНЫЙ ПЕРЕКЛЮЧАТЕЛЬ
ATS-1204"</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="аналитика-за-полчаса-">Аналитика за полчаса ?<a href="#аналитика-за-полчаса-" class="hash-link" aria-label="Прямая ссылка на Аналитика за полчаса ?" title="Прямая ссылка на Аналитика за полчаса ?">​</a></h2><p>Хороший факт -  Elemy "отдает" состояние линий и все электрические параметры по modbbus. Это значит, что собрать и показать аналитику нет особенной сложности. Тем более, что у нас есть практически готовый докер для связки mqtt-telegraf-influx-grafana. В данном случае нам mqtt не нужна, мы можем отключить ее, а вот остальное весьма понадобиться.</p><p>Итак, нам дали Windows сервер (да, ужас), но слава Богу и там есть докер.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="разворачиваем-докер-на-win-сервере">Разворачиваем докер на Win сервере<a href="#разворачиваем-докер-на-win-сервере" class="hash-link" aria-label="Прямая ссылка на Разворачиваем докер на Win сервере" title="Прямая ссылка на Разворачиваем докер на Win сервере">​</a></h2><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>подсказка</div><div class="admonitionContent_S0QG"><p>Докер для Win: <a href="https://www.docker.com/products/docker-desktop/" target="_blank" rel="noopener noreferrer">https://www.docker.com/products/docker-desktop/</a></p></div></div><p>Наш готовый докер с инструкцией по разворачиванию  <a href="https://gitlab.nnz-ipc.net/iot/grafana-influx" target="_blank" rel="noopener noreferrer">https://gitlab.nnz-ipc.net/iot/grafana-influx</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="конфиг-telegraf">Конфиг telegraf<a href="#конфиг-telegraf" class="hash-link" aria-label="Прямая ссылка на Конфиг telegraf" title="Прямая ссылка на Конфиг telegraf">​</a></h2><p>Telegraf - мощнейшее средство перекладывания данных из источника к премнику. В нашем случа источник modbus rtu, а приемник база influxdb. Мы должны забрать регистры Elemy ATS-1204 (полная карта регистров есть на сайте производителя).</p><p>Вот так выглядит конфиг telegraf для Elemy ATS-1204 "на вход"</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[inputs.modbus]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name = "Device"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  slave_id = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  timeout = "10s"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  controller = "tcp://192.168.0.36:502"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  configuration_type = "register"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  holding_registers = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Volt_output", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [2]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Volt_input1", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [5]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Volt_input2", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [6]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Freq_input1", byte_order = "AB",   data_type = "UINT16", scale=0.01,  address = [7]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Freq_input2", byte_order = "AB",   data_type = "UINT16", scale=0.01,  address = [8]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Amp_output", byte_order = "AB",   data_type = "UINT16", scale=0.01,  address = [9]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Volt-ampere", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [10]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Watt", byte_order = "AB",   data_type = "INT16", scale=1.0,  address = [11]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Volt-ampere-reactive", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [12]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    { name = "Cos-ph", byte_order = "AB",   data_type = "INT16", scale=1.0,  address = [13]},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>В приемнике (на выход) - никаких изменений (приемник - база influxv2)</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[outputs.influxdb_v2]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  urls = ["http://mon_influxdb2:8086"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  token = "INFLUXDB TOKEN"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  bucket = "bucket1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ## HTTP User-Agent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  user_agent = "telegraf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Скопировать в буфер обмена" title="Скопировать" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="дашбоард-для-grafana">Дашбоард для grafana<a href="#дашбоард-для-grafana" class="hash-link" aria-label="Прямая ссылка на Дашбоард для grafana" title="Прямая ссылка на Дашбоард для grafana">​</a></h2><blockquote><p><a target="_blank" href="/assets/files/ATS-1204-1692355913043-21998d0622d7cf335a9e7e4a6597ee84.json">Cкачать json c дашбоард для  Elemy ATS-1204</a></p></blockquote><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>подсказка</div><div class="admonitionContent_S0QG"><p>В графане его надо импортировать через интерфейс управления.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="результат">Результат<a href="#результат" class="hash-link" aria-label="Прямая ссылка на Результат" title="Прямая ссылка на Результат">​</a></h2><p>После выполнения несложных манипуляций мы получили вот такую дашборду в графане. Теперь наши партнеры имеют возможность получить аналитику по работе устройства в лбом разрезе и времени. Мало того, они могут самостоятельно доработать дашборду в графане на свой вкус и цвет.</p><p><img loading="lazy" alt="Grafana dashboard" src="/assets/images/grf1-48045489d644d4978d729babc942191a.gif" width="1450" height="994" class="img_ev3q"></p>]]></content>
        <author>
            <name>dmn</name>
            <uri>https://github.com/dmnovikov</uri>
        </author>
        <category label="team" term="team"/>
        <category label="lab240" term="lab240"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Поднимаем плату на nxp ls1046 (жизнь)]]></title>
        <id>https://lab240.github.io/blog/hard-1046-start</id>
        <link href="https://lab240.github.io/blog/hard-1046-start"/>
        <updated>2023-08-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Тяжёлый запуск новой платы, сложный процессор и протоколы запуска. Но мы понемногу движемся к стабилизации процедуры старта и описанию периферии.]]></summary>
        <content type="html"><![CDATA[<p>Тяжёлый запуск новой платы, сложный процессор и протоколы запуска. Но мы понемногу движемся к стабилизации процедуры старта и описанию периферии. </p><p><img loading="lazy" src="/assets/images/dok-ls1046-1423dc7764aee22101291220be676f1f.jpg" width="960" height="540" class="img_ev3q"></p><p>Процессор nxp ls1046, память ddr4, сеть 10gb, 3x pci-e. Плата будет базовым роутером для сетей 802.11ad в диапазоне 60ГГц. </p><p>К сожалению, плата  сильно отличается от nxp devboard ls1046-ardb, поэтому конфигурации и деревья устройств упали на нас. Там конечно свой космос на стыке железа и конфигурации загрузчиков, чтобы объяснить загрузчикам Линуксу что там вообще есть. </p><p>Для примера, прежде чем запустить загрузку Линукс есть 5 стадий загрузчика и uboot. Позже опубликуем некоторые аспекты загрузки этой платы (BL1...3, TF-A).</p><p>:wq</p>]]></content>
        <author>
            <name>dmn</name>
            <uri>https://github.com/dmnovikov</uri>
        </author>
        <category label="team" term="team"/>
        <category label="lab240" term="lab240"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Передача данных "поезд-земля" (статья)]]></title>
        <id>https://lab240.github.io/blog/dmn-prj-elva1-1</id>
        <link href="https://lab240.github.io/blog/dmn-prj-elva1-1"/>
        <updated>2023-07-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Вместо пролога]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="вместо-пролога">Вместо пролога<a href="#вместо-пролога" class="hash-link" aria-label="Прямая ссылка на Вместо пролога" title="Прямая ссылка на Вместо пролога">​</a></h2><p><em>Скорости растут, поезда несутся, а дремучий "французский" GSM (а он был таковым на этапе своего зарождения в начале 90-x)  вытеснил CDMA.</em></p><p><em>Теперь уже мало кто вспомнит, что впервые в России возможность мобильного интернета на скоростях мобильной станции до 200 км\ч была доступна только в сетях стандартов: CDMA-2000 AKA CDMA-450 AKA IMT-450i .</em></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="проект-поезд-земля-и-сложные-задачи-передачи-данных">Проект "поезд-земля" и сложные задачи передачи данных<a href="#проект-поезд-земля-и-сложные-задачи-передачи-данных" class="hash-link" aria-label="Прямая ссылка на Проект &quot;поезд-земля&quot; и сложные задачи передачи данных" title="Прямая ссылка на Проект &quot;поезд-земля&quot; и сложные задачи передачи данных">​</a></h2><p>В большом проекте по обеспечению надежной высокоскоростной (10Гбит\с) связью "поезд-земля", наша команда отвечает за разработку решения для высокоскоростной передачи данных со сверх быстрым переключением каналов (в сотовой связи аналогом является механизм переключения радиотракта между БС и МС, "перехват", он же - "handover") . </p><p><img loading="lazy" alt="Train-Earth" src="/assets/images/train2-223c7c0961069b767ead64e3078dd7dc.png" width="718" height="210" class="img_ev3q"></p><p>Проект передачи данных вдоль линии ЖД характеризуется впечатляющими обывателя цифрами  - это сотни километров оптоволокна, тысячи РРС (Радио-релейных станций), служба мониторинга и управления OSS/BSS, десятки поездов и бригад обеспечения на дрезинах). И наша небольшая (в масштабах реализации первой в РФ Track Side Network), но сложная задача - <strong>сделать подвижный поезд и все что в нем находится надежным "стационарным" сетевым клиентом</strong>.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Пресса и материалы по теме</div><div class="admonitionContent_S0QG"><ul><li><a href="https://habr.com/ru/articles/739496/" target="_blank" rel="noopener noreferrer">Статья</a> на Хабре про технологию "поезд-земля" и сравнение ее с WiFi и LTE.</li><li><a href="https://www.youtube.com/watch?v=t48YXALtb-M" target="_blank" rel="noopener noreferrer">Ролик</a> на Youtube</li><li><a href="https://dokltd.ru/data/files/docs/dok-train-to-ground-ppc-10gbit.pdf" target="_blank" rel="noopener noreferrer">Описание Радио-мостов "поезд-земля (pdf)"</a> на сайте dokltd.ru</li></ul></div></div><p>В своих разработках мы подразумеваем современный поезд, который движется на высоких скоростях (до 300км\ч).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="передача-данных-земля-поезд">Передача данных "земля-поезд"<a href="#передача-данных-земля-поезд" class="hash-link" aria-label="Прямая ссылка на Передача данных &quot;земля-поезд&quot;" title="Прямая ссылка на Передача данных &quot;земля-поезд&quot;">​</a></h2><p>💥 Термин РРС расшифровывается как <strong>Радио-Релейная Станция</strong>.</p><p>Суть технологии передачи данных "земля-поезд" в том, что на поезде стоит радио-релейное оборудование (РРС), которое "смотрит" вперед и назад. В каждый момент
времени мы "видим" и "теряем" базовые станции впереди поезда и сзади поезда и необходимо переключать путь прохождения трафика между парами РРС. Путь прохождения трафика (здесь и далее <strong>ППТра</strong>) - путь, образованный парой РРС на базе (столбе) и на поезде (на носу или кормовой части). </p><p>В решении используются две основных функциональных компоненты:</p><ul><li><p><strong>CGW (Central GateWay)</strong> - маршрутизатор, устанавливаемый на "земле" (в диспетчерской или в дата-центре)</p></li><li><p><strong>TTR (Train Track Router)</strong>  - маршрутизатор, устанавливаемый на подвижном объекте (в нашем случае это первый и последний вагоны поезда)</p></li></ul><p>💥 Далее довольно часто мы будем использовать термин  ППТра - расшифровывается <strong>как П<!-- -->[уть]<!-- --> П<!-- -->[рохождения]<!-- --> Тра<!-- -->[фика]</strong>.</p><p>Упрощенная схема сетевой части выглядит так</p><p><img loading="lazy" alt="Alt text" src="/assets/images/toto1-58b995718d7c2d7fc1970fd9d712b398.png" width="531" height="489" class="img_ev3q"></p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Пояснения к картинке</div><div class="admonitionContent_S0QG"><p>На самом деле на поезде 4 РРС с разной поляризацией (две смотрят вперед и две назад). Внутри "поезда" наша славный роутер, который переключает ППТра. CGW-база - "наземный" сервер в диспетчерской, который собственно и является шлюзом в Интернет, а также потребителем трафика с камер поезда. </p><p>Для тестирования качественных показателей используются приборы BERcut-ETX и трафик-генератор T-Rex с различными профилями, что позволяет на разных моделях трафика оценить  количество потерь при переключении ППТра.</p></div></div><p>Вот настоящая схема с генератором трафика T-REX.
<img loading="lazy" alt="Alt text" src="/assets/images/toto2-086e2a33fdd3b88f1ae0382ebdbb2607.png" width="610" height="436" class="img_ev3q"></p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Пояснения к cхеме</div><div class="admonitionContent_S0QG"><p>На подвижном маршрутизаторе (TTR) - реализован демон  маршрутизации с нашим алгоритмом переключения ППТра. Алгоритм разработан с использованием DPDK на ОС Linux.</p><p>На стационарном сервере или как мы говорим "на базе" (CGW) - программная реализация, генерирующего потока heart-beat,  с нашем же алгоритмом переключения ППТра, разработанным с использование DPDK на ОС Linux</p></div></div><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Почему просто не взять коммерческий шлюз или Linux-маршрутизатор </div><div class="admonitionContent_S0QG"><p>Беда стандартных протоколов в том, что переключения  маршрута  в рамках обозначенных требований  очень медленное (даже на мощных сетевых маршрутизаторах), а если мы начинаем пользоваться IP-стеком Linux, то получаем снижение скорости при интенсивном роутинге 10Гбит и (что важнее) также переключение в районе 50мс, что для нас медленно. Для любой стационарной сети это хорошее время переключения (мы используем протокол <strong>BABEL</strong> для <strong>Mesh</strong> сетей), но мы предположили,  что при использовании DPDK это время можно кардинально уменьшить. </p></div></div><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Материалы, что же такое DPDK и почему он быстрее обычного сетевого стека</div><div class="admonitionContent_S0QG"><ul><li><a href="https://habr.com/ru/companies/selectel/articles/313150/" target="_blank" rel="noopener noreferrer">Статья по DPDK на Habr #1</a></li><li><a href="https://habr.com/ru/companies/intel/articles/302126/" target="_blank" rel="noopener noreferrer">Статья по DPDK на Habr #2</a></li></ul></div></div><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>Почему DPDK, а не VPP + DPDK  или OpenVSwitch + DPDK?</div><div class="admonitionContent_S0QG"><ul><li>В рамках поставленной задачи решили взять фреймворк с наилучшими в индустрии характеристиками работы с сетевыми контроллерами и исключить издержки OS. </li><li>Логика управления путями трафика не опирается на штатные механизмы рутинга на L2\L3 с использованием и сопровождением различного сорта таблиц а-ля ARP и\или рутинговых.</li><li>Функционал DPDK минимален и достаточен для реализации необходимой логики при минимальных издержках, которые могли бы быть привнесены программными слоями сверху DPDK.</li></ul></div></div><p>Наша задача - обеспечить непрерывный и полно-дуплексный поток данных 10Гбит/c, переключая маршрутизацию от базовой станции "впереди" к базовой станции "сзади" и обратно.</p><p>То есть, говоря сетевым языком нам надо переключать маршрут (на L2 или L3)  потока 10Гбит примерно раз в 5-10 секунд максимально быстро (с минимальными потерями). Интервал определяется скоростью движения поезда и интервалом между наземными РРС . </p><p>В этом проекте мы применяем программный фреймворк DPDK и мощную платформу NXP LX2160. Мы разработали
свой протокол, которые оптимизирован исключительно на эту задачу (с минимальными задержками переключает ППТра) .  Мы разработали свою собственную логику управления переключениями ППТра-ми . При этом
мы получаем скорость переключения ППТра  районе 1-10мс (миллисекунд), на лабораторном стенде.</p><p>💥 FleaPath - наше название, потому что трафик скачит как блоха...</p><p>💥 Еще один термин - <strong>heartbeat</strong>, <strong>хёрт-бит</strong> или <strong>HBT</strong>. Служебный трафик для определения "живости" маршрута с минимальной длиной пакета и максимальной частотой генерации пакетов. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="что-получилось">Что получилось<a href="#что-получилось" class="hash-link" aria-label="Прямая ссылка на Что получилось" title="Прямая ссылка на Что получилось">​</a></h2><p>В общем случае, при интервале HBT в 5000 микросекунд (5 миллисекунд) удаётся получить переключение исходящего ППТР-а в пределах 7000-10000 микросекунд (7-10 миллисекунд). При интервале 1 мс, мы получаем переключение в районе 1,5-3 мс, что является рекордным результатом на настоящем историческом этапе.  Разумеется эта цифра получена в условиях лабораторного стенда, но тем не менее наш стенд максимально физически приближен к натуральному воплощению.</p><p>Меньше интервал рассылки HBT - выше реактивность в петле обратной связи, а значит большая фоновая нагрузка на сетевую инфраструктуру служебным трафиком. Однако при интервале HBT в 1000 микросекунд (1 миллисекунду), ширина канала пропускного трафика примерно 1Мбит\с, что при общей полосе 10Гбит\с является допустимым в рамках начальных требований. </p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>А есть ли потери (все равно скажут, что потери есть) ?</div><div class="admonitionContent_S0QG"><p>О потерях. В стендовых испытаниях были диагностированы потери трафика, связанные, как понятно - с тем, что какое-то время ТТР отправлял фреймы по ППТра в никуда (до переключения на "живой" ППТра), в том смысле что связи между парой РРС  не было. Сколько пакетов, сколько трафика в объёме, может быть оценочно высчитано, исходя из интервала HBT и таймаута переключения. Прорабатывается несколько вариантов для повышения надёжности передачи по ППТра, исследования не закончены.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="стенды-и-проверка-работы">Стенды и проверка работы<a href="#стенды-и-проверка-работы" class="hash-link" aria-label="Прямая ссылка на Стенды и проверка работы" title="Прямая ссылка на Стенды и проверка работы">​</a></h2><p>Для проверки и тестирования мы собрали несколько стендов, один из которых представляет их себя полное физическое воплощение радиорелейной сети с регулируемым затуханием сигнала. Программа тестирования управляет электронными аттенюаторами затухания  в радиорелейной части, обеспечивая полную эмуляцию движения поезда вдоль меняющихся "базовых" станций. </p><p>Радио-релейная часть стенда</p><p><img loading="lazy" alt="Alt text" src="/assets/images/stand1-4c42fc186eea66b7a03d5083ca08493f.png" width="279" height="272" class="img_ev3q"></p><p>Кроме того, для проверки влияния потерь пакетов была собрана сеть из видеокамер, а также генератор трафика T-Rex с профилем "смешанный трафик". Таким образом, мы эмулируем пользователей в интернете в поезде (микс из youtube, веб, видео-общения, скачиваний файлов). Также мы провели испытания, пересаживая весь наш отдел на "поезд". </p><p>Надо с гордостью заявить, что первичными результатами мы воодушевлены. Мы не имеем заметных потерь и снижения скорости. При генерации T-Rex 10гбит смешанного трафика в поезде, наш DPDK-роутер "протаскивает" через себя весь трафик. Базисные принципы концепции были подтверждены, и мы готовимся к воплощению нашего решения в реальных условиях.</p><p><img loading="lazy" alt="Alt text" src="/assets/images/trex-1-4c0bdddd43b7315cfe270491b0d3e366.png" width="982" height="646" class="img_ev3q"></p><p>При натуральных испытаниях в офисе мы занимали полосу примерно 3 Гбит\с трафика в пике и вообще не ощущали дискомфорта в работе.</p><p>...статья пилится...</p>]]></content>
        <author>
            <name>dmn</name>
            <uri>https://github.com/dmnovikov</uri>
        </author>
        <category label="team" term="team"/>
        <category label="lab240" term="lab240"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[First post]]></title>
        <id>https://lab240.github.io/blog/dmn-init</id>
        <link href="https://lab240.github.io/blog/dmn-init"/>
        <updated>2023-07-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Зачем этот сайт ?]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="зачем-этот-сайт-">Зачем этот сайт ?<a href="#зачем-этот-сайт-" class="hash-link" aria-label="Прямая ссылка на Зачем этот сайт ?" title="Прямая ссылка на Зачем этот сайт ?">​</a></h2><ul><li>Привлечь новых соратников в комьюнити</li><li>В фривольной форме вести блог из которого потом готовить статьи</li><li>Дать возможность участникам генерить свой контент</li><li>Делиться радостями и печалями с сообществом</li></ul><p>:wq</p>]]></content>
        <author>
            <name>dmn</name>
            <uri>https://github.com/dmnovikov</uri>
        </author>
        <category label="team" term="team"/>
        <category label="lab240" term="lab240"/>
    </entry>
</feed>